=PHP Functions & Callbacks=

==Functions==

wsStartServer(string Host, integer Port)<br>
wsStopServer()<br>
wsSend(resource Socket, string Message, `[` boolean Binary = false `]`)<br>
wsClose(resource Socket)

==Callbacks==

wsOnOpen(resource Socket)<br>
wsOnMessage(resource Socket, string Message, boolean Binary)<br>
wsOnClose(resource Socket, integer/false Status)

==Function Details==

*wsStartServer(string Host, integer Port)*

This starts the server, which waits for clients to connect.<br>
This is the core function that runs the server, this function does not return until the server stops.

*wsStopServer()*

This stops the server, and informs all clients that the server is shutting down.  This will cause *wsStartServer* to return true.

*wsSend(resource Socket, string Message, `[` boolean Binary = false `]`)*

This sends a message to a client. If the optional _Binary_ parameter is true, the message type is set to binary.

*wsClose(resource Socket)*

This starts the closing handshake with a client, the connection will be closed when either:
  * the client responds with a close frame
  * the client closes the TCP connection
  * the connection times out on the server

==Callback Details==

*wsOnOpen(resource Socket)*

This is called when the opening handshake for a client is completed.

*wsOnMessage(resource Socket, string Message, boolean Binary)*

This is called when the server receives a message from a client. The _Binary_ parameter indicates whether the message type is binary or text.

*wsOnClose(resource Socket, integer/false Status)*

This is called when the server closes a client connection. The _Status_ parameter will be false if the client triggered the close and did not specify a status code.

=Settings=

At the top of *ws api.php*, there are a few settings which can be changed.

*WS_MAX_CLIENTS*

This is the maximum amount of clients the server will accept.

*WS_IDLE_LIMIT_READ*

This is the amount of seconds a client has to send any data to the server, before the server sends the client a ping request.

*WS_IDLE_LIMIT_PONG*

This works with _WS_IDLE_LIMIT_READ_, and is the amount of seconds a client has to respond to the ping request before the server closes the client connection.